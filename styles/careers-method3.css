/* Hero Section - Method 3: CSS Grid with viewport units */
.hero {
  background: linear-gradient(135deg, var(--primary-color) 0%, #006b78 100%);
  color: white;
  position: relative;
  display: grid;
  grid-template-rows: 80px 1fr;
  height: 100vh;
  width: 100%;
}

.hero::before {
  content: '';
  position: absolute;
  top: 80px;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 73, 82, 0.85);
  z-index: 1;
}

.hero .container {
  grid-row: 2;
  position: relative;
  z-index: 2;
  width: 100% !important;
  padding: 0 !important;
  max-width: 100% !important;
  margin: 0 !important;
  height: 100%;
}

.hero-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  height: 100%;
  width: 100%;
}

.hero-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 60px;
  background: rgba(0, 73, 82, 0.9);
  position: relative;
  z-index: 3;
}

.hero-content h1 {
  color: white;
  font-size: 56px;
  font-weight: 700;
  margin-bottom: 25px;
  line-height: 1.2;
  font-family: var(--font-display);
}

.hero-content p {
  color: white;
  font-size: 20px;
  line-height: 1.6;
  margin-bottom: 40px;
  opacity: 0.95;
}

.hero-image {
  position: relative;
  width: 100%;
  height: 100%;
}

.hero-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  display: block;
}